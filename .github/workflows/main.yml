name: Class Harmony CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    
    services:
      mongodb:
        image: mongo:5
        ports:
          - 27017:27017
        env:
          MONGO_INITDB_ROOT_USERNAME: class_harmony_test
          MONGO_INITDB_ROOT_PASSWORD: test_password
          MONGO_INITDB_DATABASE: class_harmony_test
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install server dependencies
      run: |
        cd server
        npm ci
    
    - name: Run server tests
      run: |
        cd server
        npm test
      env:
        MONGODB_URI: mongodb://class_harmony_test:test_password@localhost:27017/class_harmony_test?authSource=admin
        JWT_SECRET: test_jwt_secret
        NODE_ENV: test
    
    - name: Install client dependencies
      run: |
        cd client
        npm ci
    
    - name: Run client tests
      run: |
        cd client
        npm test
        
    - name: Run client lint
      run: |
        cd client
        npm run lint
  
  build:
    name: Build
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    
    - name: Login to DockerHub
      if: github.ref == 'refs/heads/main'
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    
    - name: Build and push backend Docker image
      uses: docker/build-push-action@v3
      with:
        context: ./server
        push: ${{ github.ref == 'refs/heads/main' }}
        tags: classharmony/backend:latest
        cache-from: type=registry,ref=classharmony/backend:latest
        cache-to: type=inline
    
    - name: Build and push frontend Docker image
      uses: docker/build-push-action@v3
      with:
        context: ./client
        push: ${{ github.ref == 'refs/heads/main' }}
        tags: classharmony/frontend:latest
        cache-from: type=registry,ref=classharmony/frontend:latest
        cache-to: type=inline
  
  deploy:
    name: Deploy
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Deploy to production
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.DEPLOY_HOST }}
        username: ${{ secrets.DEPLOY_USER }}
        key: ${{ secrets.DEPLOY_KEY }}
        script: |
          cd /opt/class-harmony
          git pull
          docker-compose pull
          docker-compose up -d --build
          docker system prune -af 